name: Lint, Test, and Deploy to Azure
on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master

env:
  AZURE_APP_NAME_STAGING: staging-vreddit-bot
  AZURE_APP_NAME_PROD: vreddit-bot
  NODE_VERSION: 14
  PACKAGE_DIR: package

jobs:
  lint:
    name: Audit, Lint, Check Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install and audit dependencies
        run: yarn install --frozen-lockfile --audit

      - name: Lint
        run: yarn lint

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Test
        run: yarn test

  deploy-staging:
    name: Deploy to Staging
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/') }}
    needs: [lint, test]
    runs-on: ubuntu-latest
    env:
      site: STAGING
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install production deps
        run: yarn install --frozen-lockfile --production

      - name: Prepare ${{ env.PACKAGE_DIR }} dir for upload
        # Use rsync so that we can exclude anything in .funcignore
        run: rsync -av --prune-empty-dirs --exclude-from .funcignore ./ ${{ env.PACKAGE_DIR }}

      - name: Deploy to Azure ${{ env.site }} (${{ env[env.app-name-var] }})
        uses: azure/functions-action@v1
        env:
          app-name-var: AZURE_APP_NAME_${{ env.site }}
          publish-profile-secret: AZURE_PUBLISH_PROFILE_${{ env.site }}
        with:
          app-name: ${{ env[env.app-name-var] }}
          package: ${{ env.PACKAGE_DIR }}
          publish-profile: ${{ secrets[env.publish-profile-secret] }}

  deploy-prod:
    name: Deploy to Prod
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
    needs: [lint, test]
    runs-on: ubuntu-latest
    env:
      site: PROD
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install production deps
        run: yarn install --frozen-lockfile --production

      - name: Prepare ${{ env.PACKAGE_DIR }} dir for upload
        # Use rsync so that we can exclude anything in .funcignore
        run: rsync -av --prune-empty-dirs --exclude-from .funcignore ./ ${{ env.PACKAGE_DIR }}

      - name: Deploy to Azure ${{ env.site }} (${{ env[env.app-name-var] }})
        uses: azure/functions-action@v1
        env:
          app-name-var: AZURE_APP_NAME_${{ env.site }}
          publish-profile-secret: AZURE_PUBLISH_PROFILE_${{ env.site }}
        with:
          app-name: ${{ env[env.app-name-var] }}
          package: ${{ env.PACKAGE_DIR }}
          publish-profile: ${{ secrets[env.publish-profile-secret] }}
